// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: rpc/service1.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetGroupEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
}

func (x *GetGroupEventReq) Reset() {
	*x = GetGroupEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupEventReq) ProtoMessage() {}

func (x *GetGroupEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupEventReq.ProtoReflect.Descriptor instead.
func (*GetGroupEventReq) Descriptor() ([]byte, []int) {
	return file_rpc_service1_proto_rawDescGZIP(), []int{0}
}

func (x *GetGroupEventReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type AttendeeAvailability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailabilityID string   `protobuf:"bytes,1,opt,name=availabilityID,proto3" json:"availabilityID,omitempty"`
	DateRanges     []string `protobuf:"bytes,2,rep,name=DateRanges,proto3" json:"DateRanges,omitempty"`
}

func (x *AttendeeAvailability) Reset() {
	*x = AttendeeAvailability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendeeAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendeeAvailability) ProtoMessage() {}

func (x *AttendeeAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendeeAvailability.ProtoReflect.Descriptor instead.
func (*AttendeeAvailability) Descriptor() ([]byte, []int) {
	return file_rpc_service1_proto_rawDescGZIP(), []int{1}
}

func (x *AttendeeAvailability) GetAvailabilityID() string {
	if x != nil {
		return x.AvailabilityID
	}
	return ""
}

func (x *AttendeeAvailability) GetDateRanges() []string {
	if x != nil {
		return x.DateRanges
	}
	return nil
}

type GetGroupEventRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attendees      []string                         `protobuf:"bytes,1,rep,name=attendees,proto3" json:"attendees,omitempty"`
	Availabilities map[string]*AttendeeAvailability `protobuf:"bytes,2,rep,name=availabilities,proto3" json:"availabilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // maps attendeeID to availability
}

func (x *GetGroupEventRes) Reset() {
	*x = GetGroupEventRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupEventRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupEventRes) ProtoMessage() {}

func (x *GetGroupEventRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupEventRes.ProtoReflect.Descriptor instead.
func (*GetGroupEventRes) Descriptor() ([]byte, []int) {
	return file_rpc_service1_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupEventRes) GetAttendees() []string {
	if x != nil {
		return x.Attendees
	}
	return nil
}

func (x *GetGroupEventRes) GetAvailabilities() map[string]*AttendeeAvailability {
	if x != nil {
		return x.Availabilities
	}
	return nil
}

type UpdateGroupEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID        string                           `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Attendees      []string                         `protobuf:"bytes,2,rep,name=attendees,proto3" json:"attendees,omitempty"`
	Availabilities map[string]*AttendeeAvailability `protobuf:"bytes,3,rep,name=availabilities,proto3" json:"availabilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // maps attendeeID to availability
}

func (x *UpdateGroupEventReq) Reset() {
	*x = UpdateGroupEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupEventReq) ProtoMessage() {}

func (x *UpdateGroupEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupEventReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupEventReq) Descriptor() ([]byte, []int) {
	return file_rpc_service1_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateGroupEventReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *UpdateGroupEventReq) GetAttendees() []string {
	if x != nil {
		return x.Attendees
	}
	return nil
}

func (x *UpdateGroupEventReq) GetAvailabilities() map[string]*AttendeeAvailability {
	if x != nil {
		return x.Availabilities
	}
	return nil
}

type UpdateGroupEventRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGroupEventRes) Reset() {
	*x = UpdateGroupEventRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupEventRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupEventRes) ProtoMessage() {}

func (x *UpdateGroupEventRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupEventRes.ProtoReflect.Descriptor instead.
func (*UpdateGroupEventRes) Descriptor() ([]byte, []int) {
	return file_rpc_service1_proto_rawDescGZIP(), []int{4}
}

var File_rpc_service1_proto protoreflect.FileDescriptor

var file_rpc_service1_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x5e, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x65, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x1a, 0x58, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf9,
	0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x65, 0x73, 0x12, 0x50,
	0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x58, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x32, 0x8c, 0x01, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x3e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x42, 0x06, 0x5a, 0x04, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_service1_proto_rawDescOnce sync.Once
	file_rpc_service1_proto_rawDescData = file_rpc_service1_proto_rawDesc
)

func file_rpc_service1_proto_rawDescGZIP() []byte {
	file_rpc_service1_proto_rawDescOnce.Do(func() {
		file_rpc_service1_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_service1_proto_rawDescData)
	})
	return file_rpc_service1_proto_rawDescData
}

var file_rpc_service1_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rpc_service1_proto_goTypes = []interface{}{
	(*GetGroupEventReq)(nil),     // 0: GetGroupEventReq
	(*AttendeeAvailability)(nil), // 1: AttendeeAvailability
	(*GetGroupEventRes)(nil),     // 2: GetGroupEventRes
	(*UpdateGroupEventReq)(nil),  // 3: UpdateGroupEventReq
	(*UpdateGroupEventRes)(nil),  // 4: UpdateGroupEventRes
	nil,                          // 5: GetGroupEventRes.AvailabilitiesEntry
	nil,                          // 6: UpdateGroupEventReq.AvailabilitiesEntry
}
var file_rpc_service1_proto_depIdxs = []int32{
	5, // 0: GetGroupEventRes.availabilities:type_name -> GetGroupEventRes.AvailabilitiesEntry
	6, // 1: UpdateGroupEventReq.availabilities:type_name -> UpdateGroupEventReq.AvailabilitiesEntry
	1, // 2: GetGroupEventRes.AvailabilitiesEntry.value:type_name -> AttendeeAvailability
	1, // 3: UpdateGroupEventReq.AvailabilitiesEntry.value:type_name -> AttendeeAvailability
	0, // 4: GroupMeetingService.GetGroupEvent:input_type -> GetGroupEventReq
	3, // 5: GroupMeetingService.UpdateGroupEvent:input_type -> UpdateGroupEventReq
	2, // 6: GroupMeetingService.GetGroupEvent:output_type -> GetGroupEventRes
	4, // 7: GroupMeetingService.UpdateGroupEvent:output_type -> UpdateGroupEventRes
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_service1_proto_init() }
func file_rpc_service1_proto_init() {
	if File_rpc_service1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_service1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendeeAvailability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupEventRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupEventRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_service1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_service1_proto_goTypes,
		DependencyIndexes: file_rpc_service1_proto_depIdxs,
		MessageInfos:      file_rpc_service1_proto_msgTypes,
	}.Build()
	File_rpc_service1_proto = out.File
	file_rpc_service1_proto_rawDesc = nil
	file_rpc_service1_proto_goTypes = nil
	file_rpc_service1_proto_depIdxs = nil
}
